buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://files.saps.dev/ci/git-md-changelog.gradle'

def ENV = System.getenv()

version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}+mc${minecraft_version}"
group = 'dev.wuffs' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'BetterCompatibilityChecker'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=bcc.mixins.json"

            mods {
                bcc {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=bcc.mixins.json"

            mods {
                bcc {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', 'bcc', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bcc {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "bcc.refmap.json"

    debug.verbose = true
    debug.export = true
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "bcc",
                "Specification-Vendor"    : "Gaz",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "gaz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "bcc.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
        if (ENV.NANITE_DEPLOY) {
            maven {
                url "https://maven.nanite.dev/"
                credentials {
                    username = "nanite"
                    password = "${ENV.NANITE_DEPLOY}"
                }
            }
        }
    }
}

if (ENV.CURSE_DEPLOY) {
    curseforge {
        apiKey = ENV.CURSE_DEPLOY
        project {
            id = project.curseforge_id
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion "Server"
            addGameVersion "Client"
            addGameVersion "${minecraft_version}"
            mainArtifact(jar)
            changelog = file("./CHANGELOG.md")
            changelogType = 'markdown'
        }
    }
}